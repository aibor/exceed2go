# SPDX-FileCopyrightText: 2024 Tobias BÃ¶hm <code@aibor.de>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

name: Test

on:
  push:
    branches:
      - "main"
      - "dev/*"
  pull_request:
    branches:
      - "main"

jobs:
  c-lint:
    name: Clang Format
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Run clang-format
        uses: DoozyX/clang-format-lint-action@v0.20
        with:
          source: bpf
          exclude: libbpf
          extensions: c

  go-setup:
    name: Go setup
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: "**/go.sum"

      - name: Go mod download
        run: go mod download

      - name: Go mod download tools
        working-directory: .github/workflows
        run: go mod download

  generate:
    name: Generate
    needs:
      - go-setup
    uses: ./.github/workflows/generate.yaml
    with:
      artifact-name: bpf

  go-deps-check:
    name: Go dependency check
    runs-on: ubuntu-24.04
    needs:
      - generate
      - go-setup
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: "**/go.sum"

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: bpf
          path: internal/bpf

      - name: Go mod tidy
        run: go mod tidy && git diff --exit-code

      - name: Go mod verify
        run: go mod verify

      - name: Install govulncheck
        working-directory: .github/workflows
        run: go install golang.org/x/vuln/cmd/govulncheck

      - name: Run govulncheck
        run: govulncheck -test ./...

  go-lint:
    name: Go Lint
    runs-on: ubuntu-24.04
    needs:
      - generate
      - go-setup
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: bpf
          path: internal/bpf

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: "v2.1"

  go-test:
    name: Go Test
    runs-on: ubuntu-24.04
    container:
      image: alpine:3.21
    needs:
      - generate
      - go-setup
    steps:
      - name: Install packages
        run: apk add --no-scripts tar qemu-system-x86_64 linux-virt

      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: "**/go.sum"

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: bpf
          path: internal/bpf

      - name: Install go-junit-report
        working-directory: .github/workflows
        run: go install github.com/jstemmer/go-junit-report/v2

      - name: Run go test
        env:
          VIRTRUN_ARGS: "-kernel /boot/vmlinuz-virt -transport pci"
        run: |
          go test -v \
            -exec "go tool virtrun" \
            -coverpkg "$(go list ./... | tr '\n' ,)" \
            -cover \
            -covermode atomic \
            -coverprofile /tmp/cover.out \
            ./... \
            | go-junit-report -set-exit-code > junit-report.xml

      - name: Upload test output
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: junit-report.xml

  reuse-lint:
    name: FSFE REUSE Compliance Check
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v5

  results:
    if: always()
    runs-on: ubuntu-24.04
    name: Test Results
    needs:
      - c-lint
      - go-deps-check
      - go-lint
      - go-test
      - reuse-lint
    steps:
      - run: exit 1
        if: |
          contains(needs.*.result, 'failure') ||
            contains(needs.*.result, 'cancelled')
